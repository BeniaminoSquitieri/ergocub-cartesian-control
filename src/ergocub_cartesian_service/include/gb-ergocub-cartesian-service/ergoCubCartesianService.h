/*
 * SPDX-FileCopyrightText: 2006-2021 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Autogenerated by Thrift Compiler (0.14.1-yarped)
//
// This is an automatically generated file.
// It could get re-generated if the ALLOW_IDL_GENERATION flag is on.

#ifndef YARP_THRIFT_GENERATOR_SERVICE_ERGOCUBCARTESIANSERVICE_H
#define YARP_THRIFT_GENERATOR_SERVICE_ERGOCUBCARTESIANSERVICE_H

#include <yarp/os/Wire.h>
#include <yarp/os/idl/WireTypes.h>
#include <yarp/sig/Matrix.h>

class ergoCubCartesianService :
        public yarp::os::Wire
{
public:
    // Constructor
    ergoCubCartesianService();

    virtual bool go_to_pose(const double x, const double y, const double z, const double q_x, const double q_y, const double q_z, const double q_w, const double traj_duration);

    virtual bool go_to_position(const double x, const double y, const double z, const double traj_duration);

    virtual bool rotate_rad(const double angle, const double x, const double y, const double z, const double traj_duration);

    virtual bool rotate_deg(const double angle, const double x, const double y, const double z, const double traj_duration);

    virtual yarp::sig::Matrix get_pose();

    virtual bool go_home();

    virtual bool is_motion_done();

    virtual bool ask_reachability_evaluation(const yarp::sig::Matrix& pose);

    virtual bool is_pose_reachable(const double x, const double y, const double z, const double q_x, const double q_y, const double q_z, const double q_w);

    virtual yarp::sig::Matrix retrieve_reachable_pose();

    virtual bool stop();

    // help method
    virtual std::vector<std::string> help(const std::string& functionName = "--all");

    // read from ConnectionReader
    bool read(yarp::os::ConnectionReader& connection) override;
};

#endif // YARP_THRIFT_GENERATOR_SERVICE_ERGOCUBCARTESIANSERVICE_H
